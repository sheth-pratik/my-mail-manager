@model MyMailWeb.Models.ManageMailConfigurationModel


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "manageMailConfiguration" }))
{
    Html.EnableClientValidation();

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Resources.Resource.ManageMailConfiguration</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ImapEmailId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImapEmailId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImapEmailId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImapEmailPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImapEmailPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImapEmailPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmImapEmailPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmImapEmailPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmImapEmailPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SMTPEmailId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SMTPEmailId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SMTPEmailId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SMTPEmailPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SMTPEmailPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SMTPEmailPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmSMTPEmailPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmSMTPEmailPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmSMTPEmailPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.UserId)


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-default" href="#" onclick="javascript:return ManageMailConfiguration.submitMailConfiguration()"><i class="fa fa-save"></i> Save</a>&nbsp;
                <a class="btn btn-default" href="#" onclick="javascript:return ManageMailConfiguration.resetMailConfiguration()"><i class="fa fa-refresh"></i> Reset</a>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    var manageMailConfigurationUrl = "@Url.Action("ManageMailConfiguration")";
    var verifyMailConnectivityUrl = "@Url.Action("VerifyMailConnectivity")";
</script>
